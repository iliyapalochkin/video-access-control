import React, { useState, useRef } from 'react';
import Icon from '@/components/ui/icon';
import DirectVideoUploader from './DirectVideoUploader';

interface VideoUploaderProps {
  onVideoSelect: (videoUrl: string) => void;
}

const VideoUploader: React.FC<VideoUploaderProps> = ({ onVideoSelect }) => {
  const [isUploading, setIsUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [videoUrl, setVideoUrl] = useState('');
  const [activeTab, setActiveTab] = useState<'direct' | 'url' | 'cloud' | 'file'>('direct');
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('video/')) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä (–º–∞–∫—Å–∏–º—É–º 5GB)
    const maxSize = 5 * 1024 * 1024 * 1024; // 5GB
    if (file.size > maxSize) {
      alert('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º 5GB');
      return;
    }

    handleUpload(file);
  };

  const handleUrlSubmit = () => {
    if (!videoUrl.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    const supportedPlatforms = [
      'drive.google.com',
      'dropbox.com',
      'vkvideo.ru',
      'vk.com/video', 
      'youtube.com',
      'youtu.be',
      'rutube.ru',
      'disk.yandex.ru'
    ];

    const isSupported = supportedPlatforms.some(platform => 
      videoUrl.toLowerCase().includes(platform)
    );

    if (!isSupported) {
      alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Å—ã–ª–∫–∏ —Å: VK –í–∏–¥–µ–æ, YouTube, RuTube');
      return;
    }

    onVideoSelect(videoUrl);
  };

  const handleCloudUrlSubmit = () => {
    if (!videoUrl.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ –∏–∑ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
    if (!videoUrl.includes('disk.yandex.ru')) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Å—ã–ª–∫—É —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞\n–§–æ—Ä–º–∞—Ç: https://disk.yandex.ru/d/...');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏
    if (!videoUrl.includes('/d/')) {
      alert('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª:\n1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∏–¥–µ–æ –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ\n2. –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"\n3. –í—ã–±–µ—Ä–∏—Ç–µ "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"\n4. –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å /d/');
      return;
    }

    onVideoSelect(videoUrl);
  };

  const formatFileSize = (bytes: number): string => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  const convertToBase64 = (file: File): Promise<string> => {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onload = () => resolve(reader.result as string);
      reader.onerror = reject;
      reader.readAsDataURL(file);
    });
  };

  const handleUpload = async (file: File) => {
    setIsUploading(true);
    setUploadProgress(0);

    try {
      // –î–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
      const fileSize = file.size;
      const steps = fileSize > 1024 * 1024 * 1024 ? 20 : 10;
      const stepDelay = fileSize > 1024 * 1024 * 1024 ? 200 : 100;
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
      for (let progress = 0; progress <= 70; progress += (70 / steps)) {
        setUploadProgress(Math.min(progress, 70));
        await new Promise(resolve => setTimeout(resolve, stepDelay));
      }

      // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      const videoUrl = URL.createObjectURL(file);
      setUploadProgress(80);

      // –î–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ (>50MB) –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ
      // localStorage –Ω–µ –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª—ã >5-10MB
      if (fileSize > 50 * 1024 * 1024) {
        console.log('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è localStorage, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ');
        setUploadProgress(100);
        onVideoSelect(videoUrl);
        alert(`–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –†–∞–∑–º–µ—Ä: ${formatFileSize(fileSize)}\n‚ö†Ô∏è –ë–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏.\n–î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª—ã –¥–æ 50–ú–ë.`);
        return;
      }

      // –î–ª—è —Ñ–∞–π–ª–æ–≤ –¥–æ 50MB —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      try {
        const base64Data = await convertToBase64(file);
        setUploadProgress(85);

        const videoData = {
          name: file.name,
          size: fileSize,
          type: file.type,
          data: base64Data,
          uploadDate: new Date().toISOString()
        };
        
        localStorage.setItem('siteVideo', JSON.stringify(videoData));
        setUploadProgress(95);
        
        alert(`–í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ! –†–∞–∑–º–µ—Ä: ${formatFileSize(fileSize)}\n‚úÖ –¢–µ–ø–µ—Ä—å –≤—Å–µ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ —É–≤–∏–¥—è—Ç –≤–∞—à–µ –≤–∏–¥–µ–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ.`);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
        alert(`–í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –Ω–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ. –†–∞–∑–º–µ—Ä: ${formatFileSize(fileSize)}\n‚ö†Ô∏è –î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø–æ–º–µ–Ω—å—à–µ.`);
      }

      setUploadProgress(100);

      // –ü–µ—Ä–µ–¥–∞–µ–º URL —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É
      onVideoSelect(videoUrl);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ');
    } finally {
      setIsUploading(false);
      setUploadProgress(0);
    }
  };

  return (
    <div className="w-full max-w-md mx-auto">
      <h3 className="text-lg font-semibold mb-4 text-center">–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ</h3>
      
      {/* –¢–∞–±—ã */}
      <div className="grid grid-cols-2 gap-2 mb-4">
        <button
          onClick={() => setActiveTab('direct')}
          className={`py-3 px-4 rounded-lg text-sm font-medium transition-colors ${
            activeTab === 'direct'
              ? 'bg-blue-600 text-white shadow-lg'
              : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
          }`}
        >
          üì± –ü—Ä—è–º–æ –Ω–∞ —Å–∞–π—Ç
        </button>
        <button
          onClick={() => setActiveTab('url')}
          className={`py-3 px-4 rounded-lg text-sm font-medium transition-colors ${
            activeTab === 'url'
              ? 'bg-blue-600 text-white shadow-lg'
              : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
          }`}
        >
          üîó –ü–æ —Å—Å—ã–ª–∫–µ
        </button>
      </div>

      {activeTab === 'direct' ? (
        <DirectVideoUploader onVideoSelect={onVideoSelect} />
      ) : activeTab === 'url' ? (
        <div className="text-center">
          <p className="text-gray-600 mb-4">
            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: VK –í–∏–¥–µ–æ, YouTube, RuTube
          </p>
          
          <div className="mb-4">
            <input
              type="url"
              placeholder="https://vkvideo.ru/video-..."
              value={videoUrl}
              onChange={(e) => setVideoUrl(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          
          <button
            onClick={handleUrlSubmit}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors"
          >
            –î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ
          </button>
        </div>
      ) : activeTab === 'cloud' ? (
        <div className="text-center">
          <Icon name="Cloud" size={48} className="mx-auto mb-4 text-blue-500" />
          
          <p className="text-gray-600 mb-4">
            –í—Å—Ç–∞–≤—å—Ç–µ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞<br/>
            <span className="text-xs text-green-600">üí° –õ—é–±–æ–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ ‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ ‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø</span>
          </p>
          
          <div className="mb-4">
            <input
              type="url"
              placeholder="https://disk.yandex.ru/d/..."
              value={videoUrl}
              onChange={(e) => setVideoUrl(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          
          <button
            onClick={handleCloudUrlSubmit}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors mb-4"
          >
            –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –æ–±–ª–∞–∫–∞
          </button>

          <div className="text-left text-xs text-gray-600 bg-gray-50 p-3 rounded-lg">
            <h4 className="font-medium mb-2">üìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞:</h4>
            <ol className="list-decimal list-inside space-y-1">
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ disk.yandex.ru</li>
              <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ –≤–∏–¥–µ–æ</li>
              <li>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª ‚Üí –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"</li>
              <li>–ù–∞–∂–º–∏—Ç–µ "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É"</li>
              <li>–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É —Å—é–¥–∞</li>
            </ol>
          </div>
        </div>
      ) : (
        <div className="text-center">
          <Icon name="Upload" size={48} className="mx-auto mb-4 text-gray-400" />
          
          <p className="text-gray-600 mb-4">
            –í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (–º–∞–∫—Å–∏–º—É–º 5GB)<br/>
            <span className="text-sm text-blue-600">–î–æ 50MB - –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ | –°–≤—ã—à–µ 50MB - —Ç–æ–ª—å–∫–æ —Å–µ—Å—Å–∏—è</span>
          </p>

          {isUploading ? (
            <div className="mb-4">
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div 
                  className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                  style={{ width: `${uploadProgress}%` }}
                ></div>
              </div>
              <p className="text-sm text-gray-600 mt-2">
                –ó–∞–≥—Ä—É–∑–∫–∞... {uploadProgress}%
              </p>
            </div>
          ) : (
            <button
              onClick={() => fileInputRef.current?.click()}
              className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
            >
              –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
            </button>
          )}

          <input
            ref={fileInputRef}
            type="file"
            accept="video/*"
            onChange={handleFileSelect}
            className="hidden"
          />

          <div className="mt-4 text-xs text-gray-500">
            <p>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: MP4, AVI, MOV, WMV</p>
            <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5GB</p>
          </div>
        </div>
      )}
    </div>
  );
};

export default VideoUploader;
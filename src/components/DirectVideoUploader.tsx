import React, { useState, useRef } from 'react';
import Icon from '@/components/ui/icon';

interface DirectVideoUploaderProps {
  onVideoSelect: (videoUrl: string) => void;
}

const DirectVideoUploader: React.FC<DirectVideoUploaderProps> = ({ onVideoSelect }) => {
  const [isUploading, setIsUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [currentFile, setCurrentFile] = useState<File | null>(null);
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    if (!file.type.startsWith('video/')) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª');
      return;
    }

    setCurrentFile(file);
    handleDirectUpload(file);
  };

  const formatFileSize = (bytes: number): string => {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };

  const handleDirectUpload = async (file: File) => {
    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–æ–º, —á—Ç–æ –≤–∏–¥–µ–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ —É –Ω–µ–≥–æ
    const userConfirmed = window.confirm(`‚ö†Ô∏è –í–ê–ñ–ù–û: –í–∏–¥–µ–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –í–ê–®–ï–ú —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ!

üîç –ß—Ç–æ–±—ã –≤–∏–¥–µ–æ –±—ã–ª–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º —Å–∞–π—Ç–∞:
1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –Ω–∞ Google Drive, Dropbox –∏–ª–∏ YouTube
2. –ü–æ–ª—É—á–∏—Ç–µ –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É 
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∫–ª–∞–¥–∫—É "üîó –ü–æ —Å—Å—ã–ª–∫–µ"

–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞?`);
    
    if (!userConfirmed) {
      return;
    }

    setIsUploading(true);
    setUploadProgress(0);

    try {
      // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä—è–º–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      const videoUrl = URL.createObjectURL(file);
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
      const progressSteps = [10, 25, 50, 75, 90, 100];
      for (let i = 0; i < progressSteps.length; i++) {
        await new Promise(resolve => setTimeout(resolve, 200));
        setUploadProgress(progressSteps[i]);
      }

      // –ü–µ—Ä–µ–¥–∞–µ–º URL –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      onVideoSelect(videoUrl);
      
      alert(`‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –Ω–∞ –í–ê–®–ï–ú —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ!\n–†–∞–∑–º–µ—Ä: ${formatFileSize(file.size)}\n–¢–∏–ø: ${file.type}\n\n‚ö†Ô∏è –î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ù–ï —É–≤–∏–¥—è—Ç —ç—Ç–æ –≤–∏–¥–µ–æ!\n\nüí° –î–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "üîó –ü–æ —Å—Å—ã–ª–∫–µ"`);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsUploading(false);
      setUploadProgress(0);
    }
  };

  return (
    <div className="w-full max-w-md mx-auto">
      <div className="bg-gradient-to-br from-blue-50 to-purple-50 rounded-lg p-6 border-2 border-dashed border-blue-300 hover:border-blue-500 transition-colors">
        <div className="text-center">
          <Icon name="Upload" size={48} className="mx-auto mb-4 text-blue-500" />
          
          <h3 className="text-lg font-semibold mb-2 text-gray-800">–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞</h3>
          
          <p className="text-gray-600 mb-4 text-sm">
            ‚ö†Ô∏è <span className="text-orange-600 font-medium">–í–∏–¥–µ–æ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –≤–∞–º!</span><br/>
            <span className="text-gray-500">–î–ª—è –≤—Å–µ—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "üîó –ü–æ —Å—Å—ã–ª–∫–µ"</span>
          </p>

          {isUploading ? (
            <div className="mb-4">
              <div className="w-full bg-gray-200 rounded-full h-3 mb-2">
                <div 
                  className="bg-gradient-to-r from-blue-500 to-purple-500 h-3 rounded-full transition-all duration-300"
                  style={{ width: `${uploadProgress}%` }}
                ></div>
              </div>
              <p className="text-sm text-gray-700 font-medium">
                –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–∏–¥–µ–æ... {uploadProgress}%
              </p>
              {currentFile && (
                <p className="text-xs text-gray-500 mt-1">
                  {currentFile.name} ‚Ä¢ {formatFileSize(currentFile.size)}
                </p>
              )}
            </div>
          ) : (
            <button
              onClick={() => fileInputRef.current?.click()}
              className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-lg font-medium transition-all duration-300 transform hover:scale-105 shadow-lg"
            >
              –í—ã–±—Ä–∞—Ç—å –≤–∏–¥–µ–æ—Ñ–∞–π–ª
            </button>
          )}

          <input
            ref={fileInputRef}
            type="file"
            accept="video/*"
            onChange={handleFileSelect}
            className="hidden"
          />

          <div className="mt-4 text-xs text-gray-500 bg-white rounded-lg p-3">
            <p className="font-medium text-gray-700 mb-1">‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</p>
            <p>‚Ä¢ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä—è–º–æ –Ω–∞ —Å–∞–π—Ç–µ</p>
            <p>‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è</p>
            <p>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–∞–π–ª–æ–≤ –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞</p>
            <p>‚Ä¢ –§–æ—Ä–º–∞—Ç—ã: MP4, AVI, MOV, WMV, MKV</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DirectVideoUploader;